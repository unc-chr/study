/*================================================================
*   Copyright (C) 2023 Goldman Ltd. All rights reserved.
*   
*   File：BM47.cpp
*   Author：leekaihua
*   Date：2023年04月23日
*   Brife：
*



*/

#include <algorithm>
#include <iostream>
#include <vector>

#include "ads.h"

using namespace std;

class Solution {
public:
    int partition(vector<int>& a, int lo, int hi) {
        int pivot = a[lo];
        while (lo < hi) {
            while (lo < hi && pivot <= a[hi]) {
                hi--;
            }
            a[lo] = a[hi];
            while (lo < hi && a[lo] <= pivot) {
                lo++;
            }
            a[hi] = a[lo];
        }
        a[lo] = pivot;
        return lo;
    }

    int findKth(vector<int> a, int n, int K) {
        // write code here
        int lo = 0;
        int hi = n - 1;
        int index_pivot = 0;
        while (lo <= hi) {
            index_pivot = partition(a, lo, hi);
            cout << "pivot: " << index_pivot << ", a[index_pivot]: " << a[index_pivot] << endl;
            cout << "lo: " << lo << ", hi: " << hi << ", pivot: " << index_pivot << endl;
            if (index_pivot == n - K) {
                break;
            } else if (index_pivot < n - K) {
                lo = index_pivot + 1;
            } else {
                hi = index_pivot - 1;
            }
        }

        return a[index_pivot];
    }
};

int main() {
    // vector<int> a {1332802,1177178,1514891,871248,753214,123866,1615405,
    //         328656,1540395,968891,1884022,252932,1034406,1455178,821713,486232,
    //         860175,1896237,852300,566715,1285209,1845742,883142,259266,520911,
    //         1844960,218188,1528217,332380,261485,1111670,16920,1249664,1199799,
    //         1959818,1546744,1904944,51047,1176397,190970,48715,349690,673887,
    //         1648782,1010556,1165786,937247,986578,798663};
    vector<int> a {42719,1587144,603784,1785879,51871,239292,935309,907344,567681,1305717,1428480,1004879,471943,1363482,730871,1326994,1988955,1197012,1640856,542228,276719,1677662,225688,1624365,379371,486406,757843,983748,727823,1923060,902471,717803,452726,49453,1039436,1834683,1384349,1746225,1274839,482842,1799112,1062273,206083,428501,542420,1376953,1059484,42888,1446154,175463,174978,1435751,620867,620262,1570957,316903,635636,938185,814893,466518,243245,704576,1628320,1529979,1036516,1695478,752744,382831,481559,1851933,1225896,1035660,1293716,1121649,1406008,475506,273350,1746222,1988592,630256,1279138,1754242,447194,936104,1541117,681399,171423,148091,377369,1835508,1213933,1493260,999880,1487614,898438,377650,1666446,1985780,1706504,1290854,1519189,367792,1571615,1026462,355256,540783,1535950,983928,330799,704635,1312400,66638,155331,374238,842525,362910,910110,126203,252108,912658,1878268,1400323,628131,960334,1036017,1915593,938673,442453,1948515,1302260,1313968,1659931,1523131,1593596,66290,220308,1660168,708270,735139,110346,1037672,714350,235292,325322,1258433,729055,231640,806245,1176613,1354537,1721841,1897481,1717361,1873786,1898702,238561,931851,623017,437246,1142666,1771162,438628,1609810,1081416,1000870,354411,1350199,1066128,339310,993683,20672,835396,1885778,1213529,120656,517993,524183,627226,1823382,1558521,1340350,1708942,203229,927079,1247322,1263009,916152,328641,1360540,234863,176681,1054565,1147739,1821291,1071765,250287,1214899,1949000,895179,1485799,585553,627654,1214464,1911454,845662,211952,1800297,283495,828282,1873601,979237,811545,1439396,1862590,1114046,1314728,1462563,1698518,1822197,1773969,155955,53705,1315250};
    int length = a.size();
    vector<int> b = a;
    sort(b.begin(), b.end());
    for (int i = 0; i < length; i++) {
        cout << i << " " << b[i] << endl;
    }
    Solution instance;
    // int result = instance.findKth(a, length, 24);
    int result = instance.findKth(a, length, 219);
    
    cout << result << endl;

    return 0;
}